#+TITLE:    Emacs Basic Quality of Live Adjustments
#+DATE:     [2024-01-04]
#+PROPERTY: header-args:emacs-lisp :tangle ../C01_EmacsConfiguration/lisp/basic_qol.el :mkdirp yes
#+STARTUP:  show2levels hideblocks
#+auto_tangle: t

* Header
#+begin_src emacs-lisp
  ;;  ____    _    ____ ___ ____    ___   ___  _     
  ;; | __ )  / \  / ___|_ _/ ___|  / _ \ / _ \| |    
  ;; |  _ \ / _ \ \___ \| | |     | | | | | | | |    
  ;; | |_) / ___ \ ___) | | |___  | |_| | |_| | |___ 
  ;; |____/_/   \_\____/___\____|  \__\_\\___/|_____|
  ;;                                                 
  ;;  ____  _____ _____ _____ ___ _   _  ____ ____  
  ;; / ___|| ____|_   _|_   _|_ _| \ | |/ ___/ ___| 
  ;; \___ \|  _|   | |   | |  | ||  \| | |  _\___ \ 
  ;;  ___) | |___  | |   | |  | || |\  | |_| |___) |
  ;; |____/|_____| |_|   |_| |___|_| \_|\____|____/ 
  ;;                                                

#+end_src

* Quality of Live Adjustments
** Startup

Make startup faster by reducing the frequency of garbage collection and then use a hook to measure Emacs startup time. 
 #+begin_src emacs-lisp
   ;; Setting garbage collection threshold (default is 800)
   ;; Required for speed and also LSP
   (setq gc-cons-threshold (* 50 1000 1000)
    gc-cons-percentage 0.6)

   ;; Profile emacs startup
   (add-hook 'emacs-startup-hook
         (lambda ()
           (message "*** Emacs loaded in %s with %d garbage collections."
            (format "%.2f seconds"
                   (float-time
                (time-subtract after-init-time before-init-time)))
               gcs-done)))

   ;; Silence compiler warnings as they can be pretty
   ;; disruptive
   ;;(setq comp-async-report-warnings-errors nil)
   
 #+end_src
** Tabs As Spaces
I Prefer ~Spaces~ over ~Tabs~, if you need to enable it for certain modes, add a hook to it.
#+begin_src emacs-lisp
  ;; Tabs as tab-char by default.
  ;; 'nil' replaces tabs with spaces
  ;;(setq-default indent-tabs-mode nil)

  ;; Set the default, fallback tabstop to be 4 spaces
  (setq-default tab-stop-list (number-sequence 4 120 4))

  ;; Set Number of Spaces displayed for a tab stop
  (setq-default tab-width 4)
  ;; ;; Enable Tabs for certain modes
  ;; (dolist (mode '(text-mode-hook				 
  ;; 				yaml-mode-hook))
  ;;   (add-hook mode (lambda () (indent-tabs-mode t))))

#+end_src
** Calender
#+begin_src emacs-lisp  
  ;; Show Calendar on StartUp                      
  ;; (calendar)

  ;; set date format to %DD-%MM-%YYYY
  (setq european-calender-style 't)
  
#+end_src
** History and File Positions
#+begin_src emacs-lisp
  ;; Remember recently accessed files
  (recentf-mode 1)

  ;; Limit history file to 50 entries to speed up start
  (setq history-length 50)
  ;; Save command and file history
  (savehist-mode 1)

  ;; Remember Cursor Positions on accessed files 
  (save-place-mode 1)
  
#+end_src
** Customization File
Even if you don't use the [[id:cfb0e412-7d18-4c22-9a71-6d57d4dde7d4][Customization Mode]], some commands might access it and therefore clutter your =init.el=.
Let's save this to another file as well as load that in *without errormessages and normal messages* (like non-existing etc...)
#+begin_src emacs-lisp
  ;; Avoid Clutter by saving Customization Settings to a different file
  (setq custom-file (locate-user-emacs-file "customization_variables.el"))
  (load custom-file 'no-error 'no-message)
  
#+end_src
** Auto-Revert Buffer
[[id:3cf0fa83-18b3-4206-a109-f4606a94b8c1][Emacs]] doesn't automatically *revert buffers* that *change on disk*.
Changing this behaviour will still ask for confirmation, but you don't need to manually call the command.
#+begin_src emacs-lisp
  ;; Revert Buffers when Files changed on disk
  (global-auto-revert-mode t)

  ;; Automatically revert Dired (and similar) Buffers without confirmation
  (setq global-auto-revert-non-file-buffers t)
  
#+end_src
** World Clocks
[[id:3cf0fa83-18b3-4206-a109-f4606a94b8c1][Emacs]] can display the curren clocktime for various places around the world with the command =world-clock=
#+begin_src emacs-lisp
  ;; Setup World Clock list
  ;; If not set, zoneinfo-style-world-list is used
  (setq world-clock-list
    '(("Etc/UTC" "UTC")
      ("Europe/Berlin" "Berlin")
      ("Europe/Paris" "Paris")
      ("Europe/London" "London")
      ("Europe/Athens" "Athens")
      ("America/New_York" "New York")
      ("America/Los_Angeles" "Seattle")
      ("America/Mexico_City" "Mexico City")
      ("Asia/Shanghai" "Shanghai")
      ("Asia/Calcutta" "Bangalore")
      ("Asia/Tokyo" "Tokyo")
      ("Pacific/Auckland" "Auckland"))
    )

  ;; Adjust how time is displayed
  (setq display-time-world-time-format
    "%A, %d %B %Y %H:%M %p %Z")
  
#+end_src
** Ace Window
#+begin_src emacs-lisp
  ;; Bind Ace Window Control
  (global-set-key (kbd "M-o") 'ace-window)
  
#+end_src
