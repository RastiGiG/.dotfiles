#+title: MaBest Bash Configuration
#+PROPERTY: header-args:bash :tangle ~/.dotfiles/D01_Bash/.bashrc :mkdirp yes
#+STARTUP: overview

* Basic Setup

=$-= expands to =himBHs= in [[id:a7e2ab1a-458f-429f-851e-ab5dce72908d][Bash]]. Which shows your ~Builtin Set Flags~. You can find the meaning for those flags under =man bash= in the *Section* ~SHELL BUILTIN COMMANDS~ under the *Subsection* ~set subsection~:
+ =h=: Remember the *location* of [[id:bf9b9431-2e38-411a-904f-c5b0c913520d][commands]] as they are looked up for execution.
+ =i=: ~interactive~
+ =m=: ~Monitor mode~. Job control enabled
+ =B=: The [[id:a7e2ab1a-458f-429f-851e-ab5dce72908d][shell]] performs [[id:8e120944-23a6-4182-a8fd-f769bf2748fb][Brace Expansion]]
+ =H=: Enable =!=-style [[id:44e97bd4-affc-49b4-8bcd-d03572bf1ec2][History]] ~Substition~
#+begin_src bash
  # If not run in interactive mode do nothing and return
  # Return himBHs -> see man bash -> SHELL BUILTIN COMMANDS -> set subsection for the meaning
  [[ $- != *i* ]] && return

  [ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion

  xhost +local:root > /dev/null 2>&1

  complete -cf sudo

  # Bash won't get SIGWINCH if another process is in the foreground.
  # Enable checkwinsize so that bash will check the terminal size when
  # it regains control.  #65623
  # http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
  shopt -s checkwinsize

  shopt -s expand_aliases

  # export QT_SELECT=4

  # Don't put duplicate lines or lines starting with spaces into the history
  HISTCONTROL=ignoreboth
  # Add Time String to History
  HISTTIMEFORMAT="%Y-%m-%d %T "

  # Enable history appending instead of overwriting.  #139609
  shopt -s histappend
#+end_src

* Colors and Highligthing 

#+begin_src bash
  colors() {
          local fgc bgc vals seq0

          printf "Color escapes are %s\n" '\e[${value};...;${value}m'
          printf "Values 30..37 are \e[33mforeground colors\e[m\n"
          printf "Values 40..47 are \e[43mbackground colors\e[m\n"
          printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

          # foreground colors
          for fgc in {30..37}; do
                  # background colors
                  for bgc in {40..47}; do
                          fgc=${fgc#37} # white
                          bgc=${bgc#40} # black

                          vals="${fgc:+$fgc;}${bgc}"
                          vals=${vals%%;}

                          seq0="${vals:+\e[${vals}m}"
                          printf "  %-9s" "${seq0:-(default)}"
                          printf " ${seq0}TEXT\e[m"
                          printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
                  done
                  echo; echo
          done
  }

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
		;;
	screen*)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
		;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
	# Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
	if type -P dircolors >/dev/null ; then
		if [[ -f ~/.dir_colors ]] ; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]] ; then
			eval $(dircolors -b /etc/DIR_COLORS)
		fi
	fi

	if [[ ${EUID} == 0 ]] ; then
		PS1='\[\033[01;31m\][\h\[\033[01;36m\] \W\[\033[01;31m\]]\$\[\033[00m\] '
	else
		PS1='\[\033[01;32m\][\u@\h\[\033[01;37m\] \W\[\033[01;32m\]]\$\[\033[00m\] '
	fi

	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh
#+end_src

* Colorful Manpages

#+begin_src bash
  ###################################################
  # Pretty-print man(1) pages. See Termcap / Terminfo
  ###################################################

  # Start blinking
  # export LESS_TERMCAP_mb=$'\E[1;91m'
  export LESS_TERMCAP_mb=$(tput bold; tput setaf 2) # green

  # Start bold
  # export LESS_TERMCAP_md=$'\E[1;91m'
  export LESS_TERMCAP_md=$(tput bold; tput setaf 2) # green

  # Start stand out
  #export LESS_TERMCAP_so=$'\E[1;93m'
  export LESS_TERMCAP_so=$(tput bold; tput setaf 3) # yellow

  # End standout
  # export LESS_TERMCAP_se=$'\E[0m'
  export LESS_TERMCAP_se=$(tput rmso; tput sgr0)

  # Start underline
  # export LESS_TERMCAP_us=$'\E[1;92m'
  export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 1) # red

  # End Underline
  # export LESS_TERMCAP_ue=$'\E[0m'
  export LESS_TERMCAP_ue=$(tput sgr0)
  
  # End bold, blinking, standout, underline
  # export LESS_TERMCAP_me=$'\E[0m'
  export LESS_TERMCAP_me=$(tput sgr0)
#+end_src

* Archives
#+begin_src bash
#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

#+end_src

* Helpful Functions
** Overview
This function snippet was created by [[https://github.com/terminalforlife/BashConfig/blob/master/source/.profile][TerminalForLife]] to create a prettified overview of the disk usage in the *current* [[id:94dcbee4-f5ad-4259-878a-02aeddc6b46b][directory]].
In the original version the output was [[id:f3c16ca9-95e3-4279-aae3-42fe9dca6737][piped]] into =column= after =sort=. However i found the output to get a little wanky then. Might remove that.
Also I added =,= to the [[id:26419d86-c777-4765-9dd1-9353f17a0716][RegExp]] to respect the ~German Locale~.

The [[id:26419d86-c777-4765-9dd1-9353f17a0716][RegExp]] itself removes the =./= by matching to the start of a ~string~ *two groups* - one only containing ~Numbers~, *some special* ~Letters~ and the ~Characters~ =.= and =,= as well as a ~Tab~ =\t= and one containing the same group plus =./=. By selecting only the first match it effectively removes the =./= from the ~pathname~. For example, in the string =15M\t./.git= the first groupt would match =15M\t= and the second =15M\t./=.

:CAUTION:
For *large* [[id:94dcbee4-f5ad-4259-878a-02aeddc6b46b][directories]] (like ~HOME~) this takes quite a while to compute!
:END:
#+begin_src bash
  # small function to get an overview of the disk usage in the current directory
  overview ()
  {
      du -h --max-depth=1 | sed -r '
         $d; s/^([.,0-9]+[KMGTPEZY]\t)\.\//\1/
       ' | sort -hr | column
  }
#+end_src
** Handling Shasums

#+begin_src bash
  #Functions to automatically evaluate shasums
  sha256()
  {
      echo "$1 $2" | sha256sum --check
  }

  sha512()
  {
      echo "$1 $2" | sha512sum --check
  }
  sha1()
  {
      echo "$1 $2" | sha1sum --check
  }
  sha224()
  {
      echo "$1 $2" | sha224sum --check
  }
  sha384()
  {
      echo "$1 $2" | sha384sum --check
  }
#+end_src
* Aliases

#+begin_src bash
  alias cp='cp -i'                          # confirm before overwriting something
  alias rm='rm -i'                          # confirm before deleting accidently
  alias la='ls -al'                         # detailed version of ls listing hidden files
  alias ll='ls -l'                          # detailed version of ls listing
  alias df='df -h'                          # human-readable sizes
  alias free='free -m'                      # show sizes in MB
  alias np='nano -w PKGBUILD'
  alias more=less
  alias mkd='mkdir -pv'                     # also creates parent directories (verbose)
#+end_src
