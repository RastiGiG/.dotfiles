#+title:        Helpful Bash Functions
#+DATE:         [2024-01-15]
#+PROPERTY:     header-args:shell :tangle ../D01_Bash/bash_functions :mkdirp yes
#+STARTUP:      show2levels
#+auto_tangle:  t

* Introduction

This ~File~ is meant to *outsource* [[id:bf9b9431-2e38-411a-904f-c5b0c913520d][Bash Functions]] in order to load them easily customize them as well as load them into other [[id:a7e2ab1a-458f-429f-851e-ab5dce72908d][Shells]]
like ~Zsh~ (mind compatibility!)

* Header

#+begin_src shell
  #----------------------------------------------------------------------------------------------------------------------
  #  ____    _    ____  _   _ _____ _   _ _   _  ____ _____ ___ ___  _   _ ____
  # | __ )  / \  / ___|| | | |  ___| | | | \ | |/ ___|_   _|_ _/ _ \| \ | / ___|
  # |  _ \ / _ \ \___ \| |_| | |_  | | | |  \| | |     | |  | | | | |  \| \___ \
  # | |_) / ___ \ ___) |  _  |  _| | |_| | |\  | |___  | |  | | |_| | |\  |___) |
  # |____/_/   \_\____/|_| |_|_|    \___/|_| \_|\____| |_| |___\___/|_| \_|____/
  #
  # - Collection of Functions for Bash -
  # Source:         - .dotfiles/000_OrgFiles/BashFuncs.org
  # Target:         - .dotfiles/D01_Bash/.bash_functions
  # Author Email:   - randomly.ventilates@simplelogin.co
  # Author GitHub:  - https://github.com/RastiGiG/
  #
  # These Functions were adapted from:
  # - TerminalForLife:   https://github.com/terminalforlife
  #
  #----------------------------------------------------------------------------------------------------------------------

#+end_src

* Functions
** Sane Defaults
These ~Functions~ are included into [[file:Aliases.org][Aliases]] since they fulfill a similar purpose: ~sane(r) defaults~
The idea is taken from [[https://github.com/terminalforlife/BashConfig/blob/master/source/.profile][TerminalForLife]]
:NOTE:
Quick note on [[id:28da9d49-b484-4ac7-9340-c800bbee5aff][ls]]:
the =--quoting-style= option determines how ~files~ and ~directories~ with ~whitespace characters~ are displayed.
=literal= means *without any* ~quotation marks~
Default is the =shell= version.
:END:
#+begin_src shell :tangle no
  # Use default applications with safer defaults
  cp() { /bin/cp -vi "$@"; }
  rm() { /bin/rm -vi --preserve-root "$@"; }
  mv() { /bin/mv -vi "$@"; }
  ln() { /bin/ln -vi "$@"; }
  mkdir() { /bin/mkdir -v "$@"; }
  chown() { /bin/chown -v --preserve-root "$@"; }
  chmod() { /bin/chmod -v --preserve-root "$@"; }
  rmdir() { /bin/rmdir -v "$@"; }

  # better defaults for listing directories
  ls() {
      /bin/ls --quoting-style=shell -pq --time-style=iso --color=auto\
              --group-directories-first --show-control-chars "$@";
  }

#+end_src
** Show Colors

Short [[id:d8f69b88-c85b-45e1-b6c4-7aeff1c67e85][shell script]] to print [[id:7936432d-8e0b-4a44-8c3f-95de3f329c5e][color information]] for your terminal
:NOTE:
Not written by me, but i can't remember the source
:END:
#+begin_src shell
    colors() {
          local fgc bgc vals seq0

          printf "Color escapes are %s\n" '\e[${value};...;${value}m'
          printf "Values 30..37 are \e[33mforeground colors\e[m\n"
          printf "Values 40..47 are \e[30;43mbackground colors\e[m\n"
          printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

          # foreground colors
          for fgc in {30..37}; do
                  # background colors
                  for bgc in {40..47}; do
                          fgc=${fgc#37} # white
                          bgc=${bgc#40} # black

                          vals="${fgc:+$fgc;}${bgc}"
                          vals=${vals%%;}

                          seq0="${vals:+\e[${vals}m}"
                          printf "  %-9s" "${seq0:-(default)}"
                          printf " ${seq0}TEXT\e[m"
                          printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m\n"
                  done
                  echo; echo
          done
    }
#+end_src
** Overview
This function snippet was created by [[https://github.com/terminalforlife/BashConfig/blob/master/source/.profile][TerminalForLife]] to create a prettified overview of the disk usage in the *current* [[id:94dcbee4-f5ad-4259-878a-02aeddc6b46b][directory]].
In the original version the output was [[id:f3c16ca9-95e3-4279-aae3-42fe9dca6737][piped]] into =column= after =sort=. However i found the output to get a little wanky then. Might remove that.
Also I added =,= to the [[id:26419d86-c777-4765-9dd1-9353f17a0716][RegExp]] to respect the ~German Locale~.

The [[id:26419d86-c777-4765-9dd1-9353f17a0716][RegExp]] itself removes the =./= by matching to the start of a ~string~ *two groups* - one only containing ~Numbers~, *some special* ~Letters~ and the ~Characters~ =.= and =,= as well as a ~Tab~ =\t= and one containing the same group plus =./=. By selecting only the first match it effectively removes the =./= from the ~pathname~. For example, in the string =15M\t./.git= the first groupt would match =15M\t= and the second =15M\t./=.

:CAUTION:
For *large* [[id:94dcbee4-f5ad-4259-878a-02aeddc6b46b][directories]] (like ~HOME~) this takes quite a while to compute!
:END:
#+begin_src shell
  # small function to get an overview of the disk usage in the current directory
  overview ()
  {
      du -h --max-depth=1 | sed -r '
         $d; s/^([.,0-9]+[KMGTPEZY]\t)\.\//\1/
       ' | sort -hr | column
  }
#+end_src

** Error Message

#+begin_src shell
  Err(){
      printf '\e[91mError\e[0m: %s\n' "$1" 1>&2
      return 1
  }

#+end_src

** Binary Ask

~"Binary"~ => Answer only ~"YES/NO"~
Makes use of =Err=
#+begin_src shell
  AskYN() {
      while :; do
          read -p "$1 (Y/N) "
          case ${REPLY,,} in
              y|yes)
                  return 0 ;;
              n|no)
                  return 1 ;;
              '')
                  Err 'Response required - Answer again' ;;
              ,*)
                  Err 'Invalid response - Answer again' ;;
          esac
      done
  }

#+end_src
** Archive Extractor

Short function to *automatically extract* ~archives~ based on the ~file extension~
#+begin_src shell
  # arcext - archive extractor
  # usage: arcext <file>
  arcext ()
  {
      if [ -f $1 ] ; then
          case $1 in
              ,*.tar.bz2)   tar xjf $1   ;;
              ,*.tar.gz)    tar xzf $1   ;;
              ,*.bz2)       bunzip2 $1   ;;
              ,*.rar)       unrar x $1     ;;
              ,*.gz)        gunzip $1    ;;
              ,*.tar)       tar xf $1    ;;
              ,*.tbz2)      tar xjf $1   ;;
              ,*.tgz)       tar xzf $1   ;;
              ,*.zip)       unzip $1     ;;
              ,*.Z)         uncompress $1;;
              ,*.7z)        7z x $1      ;;
              ,*)           echo "'$1' cannot be extracted via ex()" ;;
          esac
      else
          echo "'$1' is not a valid file"
      fi
  }

#+end_src
** List Paths in PATH

#+begin_src shell
  # short helper to list path in PATH
  path_env () {
      # backup old IFS
      OLD_IFS="$IFS"
      IFS=":"

      # -a splits input into array
      read -ra paths <<< "$PATH"
      for f in "${paths[@]}"; do
          echo "$f"
      done
      IFS="$OLD_IFS"
  }
#+end_src
** Timestamp
#+begin_src shell
  # short function to timestamp in long date format
  timestamp () {
      printf '%(%F %T)T'
  }

#+end_src
** Handling Shasums

#+begin_src shell
  #Functions to automatically evaluate shasums
  sha256()
  {
      echo "$1 $2" | sha256sum --check
  }

  sha512()
  {
      echo "$1 $2" | sha512sum --check
  }

  sha1()
  {
      echo "$1 $2" | sha1sum --check
  }
  sha224()
  {
      echo "$1 $2" | sha224sum --check
  }

  sha384()
  {
      echo "$1 $2" | sha384sum --check
  }
#+end_src
** PDF Size Reduction with GhostScript (GS)

The command below uses gs to reduce the size of PDFs
#+begin_src shell
  # arcext - archive extractor
  # usage: arcext <file>
  pdfopt ()
  {
      if [ -f $1 ] ; then
          case $1 in
              ,*.pdf)   gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.5 -dNOPAUSE -dQUIET -dBATCH -dPrinted=false -sOutputFile=${1}-compressed.pdf $1 ;;
              ,*)       echo "'$1' is not a PDF file" ;;
          esac

      else
          echo "'$1' is not a valid file"
      fi
  }

#+end_src
