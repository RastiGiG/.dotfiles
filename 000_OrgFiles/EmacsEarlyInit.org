# -*- ispell-local-dictionary: "british"; -*-
#+TITLE:        Emacs Early Init Configuration
#+DATE:         [2024-01-18]
#+DESCRIPTION:  This configuration specifies some options that should be loaded before the init.el
#+PROPERTY:     header-args:emacs-lisp :tangle ../C01_EmacsConfiguration/.emacs.d/early-init.el :mkdirp yes
#+STARTUP:      hideblocks show2levels
#+OPTIONS:      toc:2
#+auto_tangle:  t

* Table of Contents                                                     :toc:
- [[#introduction][Introduction]]
- [[#header][Header]]
- [[#startup-and-garbage-collection][Startup and Garbage Collection]]
- [[#early-ui-settings][Early UI Settings]]
  - [[#frame-resizing][Frame Resizing]]
  -  [[#startup-and-other-inhibits][Startup and other inhibits]]
  - [[#short-answers][Short Answers]]
  - [[#bars-and-menus][Bars and Menus]]
  - [[#dialog-box][Dialog Box]]
  - [[#file-dialog][File Dialog]]
- [[#general-theming-functions][General Theming Functions]]
- [[#package-cache][Package Cache]]
- [[#avoid-initial-flash][Avoid initial Flash]]
- [[#name-initial-frame][Name initial Frame]]

* Introduction

This file works in tandem with my personal [[id:3cf0fa83-18b3-4206-a109-f4606a94b8c1][Emacs Configuration]] and therefore its geared towards my needs.
It is not meant as a prime example or template nor is it aimed to be a general purpose setup.

Feel free to adopt parts as you see fit.

Some parts of this config were taken from [[https://protesilaos.com/emacs/dotemacs#h:7b7b5898-09f7-4128-8af0-4041f67cb729][Protesilaos.com: Dotemacs]].
* Header
#+begin_src emacs-lisp
  ;;   _____ __  __    _    ____ ____  
  ;;  | ____|  \/  |  / \  / ___/ ___| 
  ;;  |  _| | |\/| | / _ \| |   \___ \ 
  ;;  | |___| |  | |/ ___ \ |___ ___) |
  ;;  |_____|_|  |_/_/   \_\____|____/ 
  ;;                                   
  ;;                  _             _       _ _   
  ;;   ___  __ _ _ __| |_   _      (_)_ __ (_) |_ 
  ;;  / _ \/ _` | '__| | | | |_____| | '_ \| | __|
  ;; |  __/ (_| | |  | | |_| |_____| | | | | | |_ 
  ;;  \___|\__,_|_|  |_|\__, |     |_|_| |_|_|\__|
  ;;                    |___/                     

  ;; NOTE: early-init.el is generated from EmacsEarlyInit.org.
  ;; Please change your settings in that file
  ;; using Emacs and early-init.el will be generated automatically!

#+end_src

* Startup and Garbage Collection

Make startup faster by reducing the frequency of garbage collection and then use a hook to measure Emacs startup time. 
 #+begin_src emacs-lisp
   ;; Temporarily increase the garbage collection threshold.  These
   ;; changes help shave off about half a second of startup time.  The
   ;; `most-positive-fixnum' is DANGEROUS AS A PERMANENT VALUE.  See the
   ;; `emacs-startup-hook' a few lines below for what I actually use.
   (setq gc-cons-threshold most-positive-fixnum
         gc-cons-percentage 0.5)

   ;; Same idea as above for the `file-name-handler-alist' and the
   ;; `vc-handled-backends' with regard to startup speed optimisation.
   ;; Here I am storing the default value with the intent of restoring it
   ;; via the `emacs-startup-hook'.
   (defvar pet/emacs--file-name-handler-alist file-name-handler-alist)
   (defvar pet/emacs--vc-handled-backends vc-handled-backends)

   (setq file-name-handler-alist nil
         vc-handled-backends nil)


   ;; Set the actual values after startup
   ;; Setting garbage collection threshold (default is 800)
   ;; Required for speed and also LSP
   (add-hook 'emacs-startup-hook
             (lambda ()
               (setq gc-cons-threshold (* 1024 1024 20)
                     gc-cons-percentage 0.2
                     file-name-handler-alist pet/emacs--file-name-handler-alist
                     vc-handled-backends pet/emacs--vc-handled-backends)))

   ;; Profile emacs startup
   (add-hook 'emacs-startup-hook
             (lambda ()
               (message "*** Emacs loaded in %s with %d garbage collections."
                        (format "%.2f seconds"
                                (float-time
                                 (time-subtract after-init-time before-init-time)))
                        gcs-done)))

   ;; Silence compiler warnings as they can be pretty
   ;; disruptive
   ;;(setq comp-async-report-warnings-errors nil)

 #+end_src
* Early UI Settings
#+begin_src emacs-lisp
  ;; --------------------------------------------------------
  ;; Early UI Settings

#+end_src
** Frame Resizing
#+begin_src emacs-lisp
  ;; Frame resizing and settings
  (setq frame-resize-pixelwise t
        frame-inhibit-implied-resize t
        frame-title-format '("%b"))

#+end_src
** Startup and other inhibits
#+begin_src emacs-lisp
  ;; Startup Messages and other inhibits
  (setq inhibit-splash-screen t
        inhibit-startup-screen t
        inhibit-x-resources t
        inhibit-startup-echo-area-message user-login-name ; read the docstring
        inhibit-startup-buffer-menu t)

#+end_src
** Short Answers
#+begin_src emacs-lisp
  ; Type ’y’ and ’n’ instead of ’yes’ or ’no’
  (setq use-short-answers t)
  
#+end_src
** Bars and Menus
#+begin_src emacs-lisp
  (scroll-bar-mode -1)        ; Disable visible scrollbar
  (tool-bar-mode -1)          ; Disable the toolbar
  (tooltip-mode -1)           ; Disable tooltips
  (set-fringe-mode 10)        ; Give some breathing room
  (menu-bar-mode -1)          ; Disable the menu bar

#+end_src
** Dialog Box
Don't show a *windowed dialog* box to keep [[id:3cf0fa83-18b3-4206-a109-f4606a94b8c1][Emacs]] keyboard-driven
#+begin_src emacs-lisp
  ;; Enable mouse events, in case needed
  (setq use-dialog-box t)
  
#+end_src
** File Dialog
#+begin_src emacs-lisp
  ;; No file dialog
  (setq use-file-dialog nil)

#+end_src
* General Theming Functions
#+begin_src emacs-lisp
  ;;;; General theme code
  (defun pet/emacs-theme-environment-dark-p ()
    "Return non-nil since environment theme is dark (ALWAYS)."
    t)

  (defun pet/emacs-re-enable-frame-theme (_frame)
    "Re-enable active theme, if any, upon FRAME creation.
  Add this to `after-make-frame-functions' so that new frames do
  not retain the generic background set by the function
  `pet/emacs-avoid-initial-flash-of-light'."
    (when-let ((theme (car custom-enabled-themes)))
      (enable-theme theme)))

#+end_src
* Package Cache

Set this to =t= if you use the default package manager =package.el=.
#+begin_src emacs-lisp
  ;; Set this to nil, when using straight.el
  (setq package-enable-at-startup nil)

#+end_src
* Avoid initial Flash

[[id:3cf0fa83-18b3-4206-a109-f4606a94b8c1][Emacs]] loads a light theme by default, which is just plain awful, especially in dark environments.
#+begin_src emacs-lisp
  ;; STOP BURNING MY EYES EMACS
  (defun pet/emacs-avoid-initial-flash-of-light ()
    "Avoid flash of light when starting Emacs, if needed.
  New frames are instructed to call `pet/emacs-re-enable-frame-theme'."
    (when (pet/emacs-theme-environment-dark-p)
      (setq mode-line-format nil)
      (set-face-attribute 'default nil :background "#000000" :foreground "#ffffff")
      (set-face-attribute 'mode-line nil :background "#000000" :foreground "#ffffff" :box 'unspecified)
      (add-hook 'after-make-frame-functions #'pet/emacs-re-enable-frame-theme)))

  (pet/emacs-avoid-initial-flash-of-light)

#+end_src
* Name initial Frame
#+begin_src emacs-lisp
  ;; Name of initial frame 
  (add-hook 'after-init-hook (lambda () (set-frame-name "home")))
#+end_src
